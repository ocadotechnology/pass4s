"use strict";(self.webpackChunkpass4s=self.webpackChunkpass4s||[]).push([[687],{4529:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>m,frontMatter:()=>s,metadata:()=>c,toc:()=>i});var a=n(8168),o=(n(6540),n(5680));const s={sidebar_position:6,description:"Local SNS/SQS development with Localstack"},r="Localstack",c={unversionedId:"localstack",id:"localstack",title:"Localstack",description:"Local SNS/SQS development with Localstack",source:"@site/../mdoc/target/mdoc/localstack.md",sourceDirName:".",slug:"/localstack",permalink:"/pass4s/docs/localstack",draft:!1,editUrl:"https://github.com/ocadotechnology/pass4s/edit/main/docs/localstack.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,description:"Local SNS/SQS development with Localstack"},sidebar:"sidebar",previous:{title:"Migration guide",permalink:"/pass4s/docs/migration-guide"}},l={},i=[{value:"Docker compose setup",id:"docker-compose-setup",level:2},{value:"Resources",id:"resources",level:2}],u={toc:i},p="wrapper";function m(e){let{components:t,...n}=e;return(0,o.yg)(p,(0,a.A)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"localstack"},"Localstack"),(0,o.yg)("p",null,"If you want to use pass4s for SNS/SQS messaging, your usual first step is to set up local development environment. ",(0,o.yg)("a",{parentName:"p",href:"https://docs.localstack.cloud/"},"Localstack")," is a toolkit provided by Amazon to replicate AWS locally. This section provides ready-to-use localstack setup using ",(0,o.yg)("a",{parentName:"p",href:"https://docs.docker.com/compose/"},"docker-compose"),"."),(0,o.yg)("h2",{id:"docker-compose-setup"},"Docker compose setup"),(0,o.yg)("p",null,"To launch localstack simply copy the snippet below and save it locally as ",(0,o.yg)("inlineCode",{parentName:"p"},"docker-compose.yml"),". Once that's done, open terminal, navigate to the place where you saved the file and run ",(0,o.yg)("inlineCode",{parentName:"p"},"docker-compose up"),". Your setup is ready to go."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-yml"},'version: "3.8"\n\nservices:\n  localstack:\n    container_name: localstack_main\n    image: localstack/localstack\n    hostname: localhost.localstack.cloud\n    ports:\n      - "127.0.0.1:4566:4566"            # LocalStack Gateway\n      - "127.0.0.1:4510-4559:4510-4559"  # external services port range\n    environment:\n      - DOCKER_HOST=unix:///var/run/docker.sock\n      - SERVICES=sqs,sns\n      - EAGER_SERVICE_LOADING=1\n      - SKIP_SSL_CERT_DOWNLOAD=1\n      - HOSTNAME_EXTERNAL=localhost.localstack.cloud\n    volumes:\n      - "/tmp/localstack:/var/lib/localstack"\n      - "/var/run/docker.sock:/var/run/docker.sock"\n  \n  setup-resources:\n    image: localstack/localstack\n    environment:\n      - AWS_ACCESS_KEY_ID=test\n      - AWS_SECRET_ACCESS_KEY=AWSSECRET\n      - AWS_DEFAULT_REGION=eu-west-2\n    entrypoint: /bin/sh -c\n    command: >\n      "\n        sleep 15\n        alias aws=\'aws --endpoint-url http://localstack:4566\'\n        # Executing SNS\n        aws sns create-topic --name local_sns\n        # Executing SQS\n        aws sqs create-queue --queue-name local_queue\n        # Subscribing to SNS to SQS\n        aws sns subscribe --attributes \'RawMessageDelivery=true\' --topic-arn arn:aws:sns:eu-west-2:000000000000:local_sns --protocol sqs --notification-endpoint arn:aws:sqs:eu-west-2:000000000000:local_queue\n        aws sqs get-queue-url --queue-name local_queue\n        # Create na S3 bucket for large messages\n        aws s3 mb s3://large-messages\n      "      \n    depends_on:\n      - localstack\n')),(0,o.yg)("h2",{id:"resources"},"Resources"),(0,o.yg)("p",null,"This setup comes with batteries included, meaning it not only does set up the service, but also some basic resources for you to play with. The provided resources are:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Topic ",(0,o.yg)("inlineCode",{parentName:"li"},"local_sns")," to write your messages onto"),(0,o.yg)("li",{parentName:"ul"},"Queue ",(0,o.yg)("inlineCode",{parentName:"li"},"local_queue")," to read messages from"),(0,o.yg)("li",{parentName:"ul"},"Subscription between the two, making the messages from ",(0,o.yg)("inlineCode",{parentName:"li"},"local_sns")," to be pushed to ",(0,o.yg)("inlineCode",{parentName:"li"},"local_queue")),(0,o.yg)("li",{parentName:"ul"},"Bucket ",(0,o.yg)("inlineCode",{parentName:"li"},"large-messages")," in case you want to use ",(0,o.yg)("a",{parentName:"li",href:"modules/s3proxy"},"s3 proxy"))),(0,o.yg)("p",null,"Please notice how for queue creation we use ",(0,o.yg)("inlineCode",{parentName:"p"},"--attributes 'RawMessageDelivery=true'"),". This is done intentionally, make sure to use this attribute with your production setup to avoid communication issues. We add this because we don't want AWS to try interpreting our JSON message contents. To find out more check out ",(0,o.yg)("a",{parentName:"p",href:"https://docs.aws.amazon.com/sns/latest/dg/sns-large-payload-raw-message-delivery.html"},"https://docs.aws.amazon.com/sns/latest/dg/sns-large-payload-raw-message-delivery.html")))}m.isMDXComponent=!0},5680:(e,t,n)=>{n.d(t,{xA:()=>u,yg:()=>y});var a=n(6540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),i=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=i(e.components);return a.createElement(l.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=i(n),d=o,y=p["".concat(l,".").concat(d)]||p[d]||m[d]||s;return n?a.createElement(y,r(r({ref:t},u),{},{components:n})):a.createElement(y,r({ref:t},u))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,r=new Array(s);r[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[p]="string"==typeof e?e:o,r[1]=c;for(var i=2;i<s;i++)r[i]=n[i];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);